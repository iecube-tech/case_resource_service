<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace 属性：用于指定当前的映射文件和哪个接口进行映射， 需要指定接口的文件路径， 需要标注包的完整路径接口-->
<mapper namespace="com.iecube.community.model.question_bank.mapper.QuestionBankMapper">

    <resultMap id="Question" type="com.iecube.community.model.question_bank.entity.Question">
        <result column="task_template_id" property="taskTemplateId"></result>
    </resultMap>

    <resultMap id="Solution" type="com.iecube.community.model.question_bank.entity.Solution">
        <result column="question_id" property="questionId"></result>
        <result column="is_solution" property="isSolution"></result>
    </resultMap>

    <resultMap id="QuestionVo" type="com.iecube.community.model.question_bank.vo.QuestionVo">
        <result column="question_id" property="questionId"></result>
        <result column="task_template_id" property="taskTemplateId"></result>
    </resultMap>

    <insert id="addQuestion" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO question (id, task_template_id, name, solve, difficulty)
        VALUES (NULL, #{taskTemplateId}, #{name}, #{solve}, #{difficulty})
    </insert>

    <insert id="addSolution" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO solution (id, question_id, name, is_solution)
        VALUES (NULL, #{questionId}, #{name}, #{isSolution})
    </insert>

    <update id="updateQuestion">
        UPDATE question SET name=#{name}, solve=#{solve},difficulty=#{difficulty}
        WHERE id=#{id}
    </update>

    <update id="updateSolution">
        UPDATE solution SET name=#{name}, is_solution=#{isSolution}
        WHERE id=#{id}
    </update>

    <delete id="deleteQuestion">
        DELETE FROM question WHERE id=#{questionId}
    </delete>

    <delete id="deleteSolution">
        DELETE FROM solution WHERE id=#{solutionId}
    </delete>

    <select id="getQuestionById" resultMap="Question">
        SELECT * FROM question WHERE id=#{questionId}
    </select>

    <select id="getSolutionById" resultMap="Solution">
        SELECT * FROM solution WHERE id=#{solutionId}
    </select>

    <select id="getSolutionByQuestion" resultMap="Solution">
        SELECT * FROM solution WHERE question_id=#{questionId}
    </select>

    <select id="getQuestionVoByTaskTemplate" resultMap="QuestionVo">
        SELECT * FROM question WHERE task_template_id=#{taskTemplateId} ORDER BY id DESC
    </select>

    <select id="getQuestion1" resultMap="Question">
        SELECT question.id,question.task_template_id,question.name,question.solve,question.difficulty
        FROM `project_task_student` inner join `task` on project_task_student.task_id=task.id
                                    inner join question on task.task_template_id=question.task_template_id
        where project_task_student.id=#{pstId} and question.difficulty=1;
    </select>

    <select id="getQuestion2" resultMap="Question">
        SELECT question.id,question.task_template_id,question.name,question.solve,question.difficulty
        FROM `project_task_student` inner join `task` on project_task_student.task_id=task.id
                                    inner join question on task.task_template_id=question.task_template_id
        where project_task_student.id=#{pstId} and question.difficulty=2;
    </select>

    <select id="getQuestion3" resultMap="Question">
        SELECT question.id,question.task_template_id,question.name,question.solve,question.difficulty
        FROM `project_task_student` inner join `task` on project_task_student.task_id=task.id
                                    inner join question on task.task_template_id=question.task_template_id
        where project_task_student.id=#{pstId} and question.difficulty=3;
    </select>

    <insert id="addPSTQuestion">
        INSERT INTO pst_question (id,pst_id,question_id, result) VALUES (NULL, #{pstId}, #{questionId}, NULL)
    </insert>

    <insert id="addPSTQuestionSolution">
        INSERT INTO pst_question_solutions (id, pst_question_id,solution_id) VALUES (NULL, #{pstQuestionId}, #{solutionId})
    </insert>

    <select id="getPstQuestions" resultMap="QuestionVo">
        SELECT pst_question.id, question.id AS question_id, pst_question.result, question.name, question.solve, question.difficulty
        FROM pst_question INNER JOIN question ON pst_question.question_id=question.id WHERE pst_question.pst_id=#{pstId};
    </select>

    <select id="getPstQuestionAnswer" resultType="java.lang.Integer">
        SELECT solution_id FROM pst_question_solutions WHERE pst_question_solutions.pst_question_id=#{pstQuestionId};
    </select>

    <select id="getPStQuestionRealAnswer" resultType="java.lang.Integer">
        SELECT solution.id
        from solution INNER join pst_question on solution.question_id=pst_question.question_id
        WHERE pst_question.id=#{pstQuestionId} and solution.is_solution=1;
    </select>

    <update id="updatePstQuestionResult">
        UPDATE pst_question set result=#{result} WHERE id=#{pstQuestionId}
    </update>

    <update id="updatePSTObjectiveGrade">
        UPDATE project_task_student set objective_grade=#{grade} WHERE id=#{pstId}
    </update>

    <select id="getObjectiveGrade" resultType="java.lang.Integer">
        SELECT objective_grade FROM project_task_student WHERE id=#{pstId}
    </select>

    <select id="getObjectiveWeighting" resultType="java.lang.Integer">
        SELECT objective_weighting
        FROM task INNER JOIN project_task_student ON task.id=project_task_student.task_id
        WHERE project_task_student.id=#{pstId}
    </select>

    <update id="updateObjectiveGradeWeighting">
        UPDATE task SET objective_weighting=#{weighting} WHERE id=(SELECT task_id FROM project_task_student WHERE id=#{pstId});
    </update>

    <select id="getTaskObjectiveGrades" resultType="java.lang.Integer">
        SELECT objective_grade from project_task_student WHERE task_id=(SELECT task_id FROM project_task_student WHERE id=#{pstId})
    </select>
</mapper>
