<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace 属性：用于指定当前的映射文件和哪个接口进行映射， 需要指定接口的文件路径， 需要标注包的完整路径接口-->
<mapper namespace="com.iecube.community.model.npoints.mapper.NPointsMapper">

    <resultMap id="NPointsEntity" type="com.iecube.community.model.npoints.entity.NPoints">
        <result column="project_id" property="projectId"></result>
        <result column="project_name" property="projectName"></result>
        <result column="module_id" property="moduleId"></result>
        <result column="module_name" property="moduleName"></result>
        <result column="concept_id" property="conceptId"></result>
        <result column="concept_name" property="conceptName"></result>
    </resultMap>

    <resultMap id="case" type="com.iecube.community.model.npoints.entity.Case">
        <result column="case_id" property="id"></result>
        <result column="case_name" property="name"></result>
    </resultMap>

    <resultMap id="module" type="com.iecube.community.model.npoints.entity.Module">
        <result column="module_id" property="id"></result>
        <result column="case_id" property="caseId"></result>
        <result column="name" property="name"></result>
    </resultMap>

    <resultMap id="concept" type="com.iecube.community.model.npoints.entity.Concept">
        <result column="concept_id" property="conceptId"></result>
        <result column="case_id" property="caseId"></result>
        <result column="name" property="name"></result>
        <result column="module_id" property="moduleId"></result>
    </resultMap>

    <resultMap id="CaseModuleDto" type="com.iecube.community.model.npoints.dto.CaseModuleDto">
        <result column="case_id" property="caseId"></result>
        <result column="module_id" property="moduleId"></result>
    </resultMap>

    <resultMap id="link" type="com.iecube.community.model.npoints.entity.Link">

    </resultMap>

    <resultMap id="ConceptVo" type="com.iecube.community.model.npoints.vo.ConceptVo">

    </resultMap>

    <resultMap id="ModuleVo" type="com.iecube.community.model.npoints.vo.ModuleVo">
        <result column="create_time" property="createTime"></result>
    </resultMap>

    <resultMap id="CaseVo" type="com.iecube.community.model.npoints.vo.CaseVo">

    </resultMap>


    <select id="getByProjectId" resultMap="NPointsEntity">
        SELECT
            project_correlation_module.project_id as project_id, project.name as project_name,
            module_correlation_concept.module_id as module_id, Function_module.name as module_name,
            module_correlation_concept.concept_id as concept_id, Basic_concept.name as concept_name
        FROM (((
                    project INNER JOIN project_correlation_module
                    ON project.id=project_correlation_module.project_id
                ) INNER JOIN Function_module
                    ON project_correlation_module.module_id=Function_module.id
            ) INNER JOIN module_correlation_concept
                ON Function_module.id=module_correlation_concept.module_id
            ) INNER JOIN Basic_concept
                ON module_correlation_concept.concept_id=Basic_concept.id
        WHERE (project.id=#{id})
        ORDER BY Function_module.id;
    </select>

    <select id="getCaseByCaseId" resultMap="concept">
        SELECT id AS case_id, name FROM solution_or_case WHERE id=#{caseId};
    </select>

    <select id="getModuleByCaseId" resultMap="concept">
        SELECT module.id as module_id, module.name, module_case.case_id
        FROM module INNER JOIN module_case ON module.id=module_case.module_id
        WHERE module_case.case_id=#{caseId}
        ORDER BY module.id;
    </select>

    <select id="getConceptByCaseId" resultMap="concept">
        SELECT concept.id as concept_id, concept.name, concept_module.module_id, module_case.case_id
        FROM (concept INNER JOIN concept_module ON concept.id=concept_module.concept_id)
            INNER JOIN module_case ON concept_module.module_id=module_case.module_id
        WHERE module_case.case_id=#{caseId}
    </select>

    <select id="getTargetByCaseId" resultMap="link">
        SELECT  module.name AS target FROM module INNER JOIN module_case ON module.id=module_case.module_id WHERE module_case.case_id=#{caseId};
    </select>

    <select id="getTargetByModuleId" resultMap="link">
        SELECT concept.name AS target FROM concept_module INNER JOIN concept ON concept.id=concept_module.concept_id WHERE module_id=#{moduleId};
    </select>

    <select id="getCasesByModuleId" resultMap="case">
        SELECT module_case.case_id
        FROM module_case INNER JOIN module ON module_case.module_id=module.id
        WHERE module.name=(SELECT module.name FROM module WHERE module.id=#{moduleId});
    </select>

    <select id="getModulesByConceptId" resultMap="module">
        SELECT concept_module.module_id
        FROM concept_module INNER JOIN concept ON concept_module.concept_id=concept.id
        WHERE concept.name=(SELECT concept.name FROM concept WHERE concept.id=#{conceptId});
    </select>

    <select id="getAllConcepts" resultMap="ConceptVo">
        SELECT * FROM concept
    </select>


    <select id="getAllCases" resultMap="CaseVo">
        SELECT id, name FROM solution_or_case
    </select>

    <select id="getModulesByCase" resultMap="ModuleVo">
        SELECT module.id AS id, module.name AS name
        FROM `module` INNER JOIN module_case ON module.id=module_case.module_id
        WHERE module_case.case_id=#{caseId};
    </select>
    
    <select id="getConceptsByModule" resultMap="ConceptVo">
        SELECT concept.id AS id, concept.name AS name
        FROM concept INNER JOIN concept_module ON concept.id=concept_module.concept_id
        WHERE concept_module.module_id=#{moduleId};
    </select>

    <insert id="addCaseModule">
        INSERT INTO module_case (module_id,case_id) VALUES (#{moduleId}, #{caseId})
    </insert>

    <delete id="deleteCaseModule">
        DELETE FROM module_case WHERE module_id=#{moduleId} AND case_id=#{caseId}
    </delete>

    <select id="getCaseModuleListByCaseId" resultMap="CaseModuleDto">
        SELECT * FROM module_case WHERE case_id=#{caseId}
    </select>

    <insert id="insertToCaseModule">
        INSERT INTO module_case (case_id, module_id) VALUES (#{caseId}, #{moduleId})
    </insert>


    <!--  module  -->
    <select id="getModuleById" resultMap="ModuleVo">
        SELECT * FROM module WHERE id=#{moduleId}
    </select>

    <insert id="addModule" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO module (id, name) VALUES (NULL, #{name})
    </insert>

    <delete id="delModule">
        DELETE FROM module WHERE id=#{id}
    </delete>

    <update id="updateModule">
        UPDATE module SET name=#{name} WHERE id=#{id}
    </update>

    <!--  concept  -->
    <insert id="addConcept" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO concept (id,name) VALUES (NUll, #{name})
    </insert>

    <delete id="delConcept">
        DELETE FROM concept WHERE id=#{id}
    </delete>

    <!--  concept_module  -->
    <insert id="addModuleConcept" useGeneratedKeys="true">
        INSERT INTO concept_module (id, concept_id, module_id) VALUES (NULL, #{conceptId}, #{moduleId})
    </insert>

    <delete id="delConceptModule" >
        DELETE FROM concept_module WHERE concept_id=#{conceptId} and module_id=#{moduleId}
    </delete>

<!--    template-->
    <!--  cm_concept_template -->
    <insert id="addConceptTemplate" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO cm_concept_template (id,name) VALUES (NUll, #{name})
    </insert>

    <delete id="delConceptTemplate">
        DELETE FROM cm_concept_template WHERE id=#{id}
    </delete>

    <select id="getAllConceptTemplates" resultMap="ConceptVo">
    SELECT * FROM cm_concept_template
    </select>

    <select id="getConceptTempsByModuleTempId" resultMap="ConceptVo">
        SELECT cm_concept_template.id, cm_concept_template.name
        FROM cm_concept_template INNER JOIN cm_concept_module_template ON cm_concept_template.id=cm_concept_module_template.concept_template_id
        WHERE cm_concept_module_template.module_template_id=#{moduleTempId}
    </select>

    <select id="getConceptTempsByModuleTemp" resultMap="ConceptVo">
        SELECT cm_concept_template.id AS id, cm_concept_template.name AS name
        FROM cm_concept_template INNER JOIN cm_concept_module_template ON cm_concept_template.id=cm_concept_module_template.concept_template_id
        WHERE cm_concept_module_template.module_template_id=#{moduleId};
    </select>

    <!--  cm_module_template  -->
    <insert id="addModuleTemplate" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO cm_module_template (id,name,creator, create_time) VALUES (NUll, #{name},#{creator}, #{createTime})
    </insert>

    <select id="getModuleTempById" resultMap="ModuleVo">
        SELECT * from cm_module_template WHERE id=#{id}
    </select>

    <select id="getAllModuleTemplates" resultMap="ModuleVo">
        SELECT * FROM cm_module_template
    </select>

    <delete id="delModuleTemplate">
        DELETE FROM cm_module_template WHERE id=#{id}
    </delete>

    <!--  cm_concept_module_template  -->
    <insert id="addConceptModuleTemplate" useGeneratedKeys="true">
        INSERT INTO cm_concept_module_template (id, concept_template_id, module_template_id) VALUES (NULL, #{conceptId}, #{moduleId})
    </insert>

    <select id="getModuleByConceptId" resultMap="ModuleVo">
        SELECT cm_module_template.id,cm_module_template.name
        FROM cm_module_template INNER JOIN cm_concept_module_template ON cm_module_template.id=cm_concept_module_template.module_template_id INNER JOIN cm_concept_template ON cm_concept_module_template.concept_template_id=cm_concept_template.id
        WHERE cm_concept_template.id=#{conceptId}
    </select>

    <delete id="delModuleConceptTemplate">
        DELETE FROM cm_concept_module_template WHERE module_template_id=#{moduleId}
    </delete>



</mapper>