<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace 属性：用于指定当前的映射文件和哪个接口进行映射， 需要指定接口的文件路径， 需要标注包的完整路径接口-->
<mapper namespace="com.iecube.community.model.usergroup.mapper.UserGroupMapper">
    <resultMap id="userGroup" type="com.iecube.community.model.usergroup.entity.UserGroup">

    </resultMap>

    <resultMap id="TeacheVo" type="com.iecube.community.model.teacher.vo.TeacherVo">
        <result column="id" property="teacherId"></result>
        <result column="username" property="teacherName"></result>
        <result column="email" property="teacherEmail"></result>
        <result column="school_name" property="schoolName"></result>
        <result column="collage_name" property="collageName"></result>
    </resultMap>

    <resultMap id="Authority" type="com.iecube.community.model.auth.entity.Authority">

    </resultMap>

    <select id="getUserGroups" resultMap="userGroup">
        SELECT id,name FROM user_group
    </select>

    <select id="getUserGroupById" resultMap="userGroup">
        SELECT id,name FROM user_group WHERE id=#{id}
    </select>

    <insert id="addUserGroup" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO user_group (id, name) VALUES (NULL,#{name})
    </insert>

    <update id="updateUserGroup">
        UPDATE user_group SET name=#{name} WHERE id=#{id}
    </update>

    <delete id="deleteUserGroup">
        DELETE FROM user_group WHERE id=#{id}
    </delete>

    <select id="getTeachersByGroupId" resultMap="TeacheVo">
        SELECT `teacher`.id,`teacher`.username,`teacher`.email, `Collage`.`name` AS collage_name, `School`.`name` AS school_name
        FROM `user_group_user` LEFT JOIN `user_group` ON `user_group_user`.user_group_id=`user_group`.id
                               RIGHT JOIN `teacher` ON `user_group_user`.teacher_id=`teacher`.id
                               RIGHT JOIN `Collage` ON `teacher`.collage_id=`Collage`.id
                               RIGHT JOIN `School` ON `Collage`.school_id=`School`.id
        WHERE `user_group`.id=#{groupId} AND `teacher`.is_delete=0
    </select>

    <insert id="addTeacherToGroup" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO `user_group_user` (id, user_group_id, teacher_id) VALUES (NULL, #{groupId}, #{teacherId})
    </insert>

    <delete id="deleteTeacherFromGroup">
        DELETE FROM `user_group_user` WHERE user_group_id=#{groupId} and teacher_id=#{teacherId}
    </delete>

    <select id="getAuthoritiesByGroupId" resultMap="Authority">
        SELECT `authority`.id,  `authority`.authority, `authority`.instructions
        FROM `user_group` LEFT JOIN `user_group_auth` ON `user_group`.id=`user_group_auth`.user_group_id
                          RIGHT JOIN `authority` ON `user_group_auth`.user_group_auth=`authority`.id
        WHERE `user_group`.id=#{groupId}
    </select>

    <insert id="addAuthorityToGroup" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO `user_group_auth` (id, user_group_id, user_group_auth) VALUES (NULL, #{groupId}, #{authorityId})
    </insert>

    <delete id="deleteAuthorityFromGroup">
        DELETE FROM `user_group_auth` WHERE user_group_id=#{groupId} and user_group_auth=#{authorityId}
    </delete>

    <select id="getTeacherAuth" resultType="java.lang.String">
        SELECT `authority`.authority
        FROM `authority` LEFT JOIN `user_group_auth` ON `authority`.id=`user_group_auth`.user_group_auth
                         LEFT JOIN `user_group` ON `user_group_auth`.user_group_id=`user_group`.id
                         LEFT JOIN `user_group_user` ON `user_group_user`.user_group_id=`user_group`.id
        WHERE `user_group_user`.teacher_id=#{teacherId}
    </select>

</mapper>