<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace 属性：用于指定当前的映射文件和哪个接口进行映射， 需要指定接口的文件路径， 需要标注包的完整路径接口-->
<mapper namespace="com.iecube.community.model.auth.mapper.UserMapper">
    <!--自定义映射规则： resultMap标签来完成映射规则的定义-->
    <!--resultMap标签属性
    id：表示给这个映射规则分配一个唯一的id值 作用 对应resultMap=“id” 属性的取值
    type: 取值是一个类   具体表示数据库中的查询结果与java中的哪个实体类进行结果集的映射
    -->
    <resultMap id="UserEntityMap" type="com.iecube.community.model.auth.entity.User">
        <!--将表的字段和类的属性不一致的字段进行匹配指定， 名称一致的字段可以省略不写
            column 表的列    property 类的属性
            在定义映射规则时 主键是不可以省略的  id 字段不能省略
        -->
        <result column="id" property="id"></result>
        <result column="phone_num" property="phoneNum"></result>
        <result column="type_id" property="typeId"></result>
        <result column="user_group" property="userGroup"></result>
        <result column="is_delete" property="isDelete"></result>
        <result column="organization_id" property="organizationId"></result>
        <result column="vip_type_id" property="vipTypeId"></result>
        <result column="product_direction_id" property="productDirectionId"></result>
        <result column="create_time" property="createTime"></result>
        <result column="last_modified_user" property="lastModifiedUser"></result>
        <result column="last_modified_time" property="lastModifiedTime"></result>
    </resultMap>


    <!--id 属性：表示映射的接口中方法的名称， 直接在标签的内部编写sql语句-->
    <!--useGeneratedKeys 属性：表示开启某个字段的值递增（一般逐渐递增） keyProperty 属性： 表示将表中的哪个字段作为主键递增-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (id, username, phone_num, email, password, type_id, salt, gender, user_group, is_delete,
                          organization_id, vip_type_id,
                          product_direction_id, creator, create_time, last_modified_user, last_modified_time)
        VALUES (NULL,#{username}, #{phoneNum}, #{email}, #{password}, #{typeId}, #{salt}, #{gender}, #{userGroup},
                #{isDelete}, #{organizationId}, #{vipTypeId},
                #{productDirectionId}, #{creator}, #{createTime}, #{lastModifiedUser}, #{lastModifiedTime})
    </insert>

    <!--select 语句在执行时 查询的结果是一个对象， 多个对象。-->
    <!--单个对象  resultType： 表示查询的结果集类型，只需要指定对应映射类的类型， 并且包含完整的包结构.前提表的字段和实体类的属性保持一致
                resultMap: 表的字段和实体类的属性不一致时， 来自定义查询结果集的映射规则
    -->
    <select id="findByPhoneNum" resultMap="UserEntityMap">
        SELECT * FROM user WHERE phone_num = #{PhoneNum}
    </select>

    <select id="findByEmail" resultMap="UserEntityMap">
        SELECT * FROM user WHERE email = #{email}
    </select>

    <select id="findByUserId" resultMap="UserEntityMap">
        SELECT * FROM user WHERE id=#{id}
    </select>

    <update id="updatePasswordByUserId">
        UPDATE user SET
            password=#{password},
            last_modified_user=#{lastModifiedUser},
            last_modified_time=#{lastModifiedTime}
        WHERE id=#{id}
    </update>

    <update id="updatePhoneNum">
        UPDATE user SET
            phone_num=#{phoneNum},
            last_modified_user=#{lastModifiedUser},
            last_modified_time=#{lastModifiedTime}
        WHERE id=#{id}
    </update>

    <update id="updateEmail">
        UPDATE user SET
                        email=#{email},
                        last_modified_user=#{lastModifiedUser},
                        last_modified_time=#{lastModifiedTime}
        WHERE id=#{id}
    </update>


    <update id="updateUserGroup">
        UPDATE user SET
                        user_group=#{userGroup},
                        last_modified_user=#{lastModifiedUser},
                        last_modified_time=#{lastModifiedTime}
        WHERE id=#{id}
    </update>

    <update id="updateOrganization">
        UPDATE user SET
                        organization_id=#{organizationId},
                        last_modified_user=#{lastModifiedUser},
                        last_modified_time=#{lastModifiedTime}
        WHERE id=#{id}
    </update>

    <update id="updateProductDirectionId">
        UPDATE user SET
                        product_direction_id=#{productDirectionId},
                        last_modified_user=#{lastModifiedUser},
                        last_modified_time=#{lastModifiedTime}
        WHERE id=#{id}
    </update>

    <update id="deleteUser">
        UPDATE user SET
                        is_delete=1,
                        last_modified_user=#{lastModifiedUser},
                        last_modified_time=#{lastModifiedTime}
        WHERE id=#{id}
    </update>

    <select id="findByGroup" resultMap="UserEntityMap">
        SELECT
            id,username,phone_num, email, gender, user_group, organization_id,
            product_direction_id, creator, create_time, last_modified_user, last_modified_time
        FROM user WHERE user_group=#{userGroup}
    </select>

    <select id="findTypeIdById" resultType="java.lang.Integer">
        SELECT type_id FROM user WHERE id=#{id}
    </select>


</mapper>
